import os
import sys

###############################################################################
# The script allows to extract from an environmement file variables that
# changes from development to production.

# Argument: The file name of the environment file from the folder that the
# script is called from. Expectation is .env or .env.production

# Output: Generate a file in the frontend service folder called 
# constants_env.ts
###############################################################################

# Get the environment variable from different files
if len(sys.argv) > 1:
    envFile = sys.argv[1] # First parameter is the environment file. E.g. .production.env
else:
    envFile = ".env" #.env

# Read the environment variables from the .env file
__location__ = os.path.realpath(os.path.join(
    os.getcwd(), os.path.dirname(__file__)))
fullPath = os.path.join(__location__, ".." , envFile)
print("Full Path: " + fullPath)
f = open(fullPath)
lines = f.read().splitlines()

# Extract all the key-value of each line
keyValues = []
for line in lines:
    if line.strip().find("#private-nogenerate") == -1: # Ensure we ignore line that contains the comment #private-nogenerate
        if line.find("=") >= 0 and line.strip().find("#") != 0:
            lineSplit = line.split("=")
            left = lineSplit[0].strip()
            right = lineSplit[1].strip()
            if right.find("#") > 0:
                right = right[:right.find("#")-1]
            keyValues.append([left, right])

# Create the TS file
tsFile = "/**\n ** This file is generated by scripts/envToConsts.py\n **/\n"
tsFile += "export const ENV_VARIABLES = {\n"

for pair in keyValues:
    if str(pair[1]).isnumeric():
        tsFile += "  " + pair[0] + ": " + pair[1] + ",\n"
    elif pair[1] == "true" or pair[1] == "false" or pair[1] == "TRUE" or pair[1] == "FALSE":
        tsFile += "  " + pair[0] + ": " + pair[1].lower() + ",\n"
    else:
        tsFile += "  " + pair[0] + ": \"" + pair[1].lower() + "\",\n"
tsFile += "}"

# Write the file on disk
if envFile == ".env":
    outputFilePath = os.path.join(__location__, '../services/frontend/src/generated/constants_env.ts')
else:
    outputFilePath = os.path.join(__location__, '../node/src/generated/constants_env.ts')

print("Output file: " + outputFilePath)
f = open(outputFilePath, "w")
f.write(tsFile)
f.close()
