# Shared Configuration for Development and Production
x-app: &default-app
  env_file:
    - ".env"
  restart: "${DOCKER_RESTART_POLICY:-unless-stopped}"
  stop_grace_period: "3s"
  tty: true
  healthcheck:
    interval: "60s"
    timeout: "3s"
    start_period: "5s"
    retries: 3

services:
  redis:
    <<: *default-app
    image: realtimepixel_redis:latest
    build:
      context: "./services/redis"
      dockerfile: Dockerfile
      target: ${NODE_ENV}
      args:
        - "NODE_ENV=${NODE_ENV}"
    ports:
      - "${DOCKER_REDIS_PORT_FORWARD}:${REDIS_PORT}"
    networks:
      - backend_net
  backend:
    <<: *default-app
    depends_on:
      - "redis"
    image: realtimepixel_backend:latest
    build:
      context: "./services"
      dockerfile: backend/Dockerfile
      target: ${NODE_ENV}
      args:
        - "NODE_ENV=${NODE_ENV}"
        - "SERVER_PORT=${SERVER_PORT}"
    ports:
      - "${DOCKER_SERVER_PORT_FORWARD}:${SERVER_PORT}"
      - 9229:9229
    healthcheck:
      test: "${DOCKER_SERVER_HEALTHCHECK_TEST}"
    networks:
      - backend_net
      - frontend_net
  frontend:
    <<: *default-app
    depends_on:
      - "backend"
    image: realtimepixel_frontend:latest
    build:
      context: "." # Need to be . instead of service because we need access to scripts folder
      target: ${NODE_ENV}
      dockerfile: services/frontend/Dockerfile
      args:
        - "NODE_ENV=${NODE_ENV}"
        - "CLIENT_PORT=${CLIENT_PORT}"
    ports:
      - "${DOCKER_CLIENT_PORT_FORWARD}:${CLIENT_PORT}"
    healthcheck:
      test: "${DOCKER_CLIENT_HEALTHCHECK_TEST}"
    networks:
          - backend_net
          - frontend_net
networks:
  frontend_net:
    driver: bridge # https://docs.docker.com/network/#network-drivers
  backend_net:
    driver: bridge 