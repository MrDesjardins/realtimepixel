# Default values for realtimepixel.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
namespace: "realtimepixel-prod"
azureLoadBalancerResourceGroup: "MC_realtimepixel_resourcegroup_realpixelask2_eastus"
azureLoadBalancerIP: "20.121.6.121"

redisDeploymentName: "redis-deployment"
redisServiceName: "redis-service"
redisReplicaCount: 1
redisContainerName: "redis-pod"
redisContainerPort: 6379
redisService:
  type: NodePort
  nodePort: 30064
  port: 6379

backendDeploymentName: "backend-deployment"
backendServiceName: "backend-service"
backendReplicaCount: 1
backendContainerName: "backend-pod"
backendContainerPort: 80
backendEnv:
  - name: IP_BACKEND
    value: "backend-service" # Service selector app
  - name: OUTER_PORT_BACKEND
    value: "80"
  - name: INNER_PORT_BACKEND
    value: "80"
  - name: IP_REDIS
    value: "redis-service" # Service selector app
  - name: OUTER_PORT_REDIS
    value: "6379"
  - name: IP_FRONTEND
    value: "frontend-service" # Service selector app
  - name: OUTER_PORT_FRONTEND
    value: "80"
backendService:
  type: NodePort
  nodePort: 30063
  port: 80

frontendDeploymentName: "frontend-deployment"
frontendServiceName: "frontend-service"
frontendReplicaCount: 1
frontendContainerName: "frontend-pod"
frontendContainerPort: 80
frontendEnv:
  - name: IP_BACKEND
    value: "backend-service" # Service selector app
frontend:
  annotations:
    {
      "service.beta.kubernetes.io/azure-load-balancer-resource-group": "MC_realtimepixel_resourcegroup_realpixelask2_eastus",
    }

frontendService:
  type: LoadBalancer
  nodePort: 30062
  port: 80

image:
  redis:
    repository: "realtimepixel_redis"
    tag: "latest"
  backend:
    repository: "realtimepixel_backend"
    tag: "latest"
  frontend:
    repository: "realtimepixel_frontend"
    tag: "latest"
  pullPolicy: Never

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext:
  {}
  # fsGroup: 2000

securityContext:
  {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  name: "nginx-ingress"
  enabled: true
  className: "nginx"
  loadBalancerIP: "52.255.155.119"
  hosts:
    - host: realtimepixel.eastus.cloudapp.azure.com
      paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: "frontend-service"
              port:
                number: 80
  # tls:
  #  - secretName: realtimepixel-secret
  #    hosts:
  #      - realtimepixel.eastus.cloudapp.azure.com

secret:
  name: realtimepixel-secret
  crt: todo
  key: todo

resources:
  {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
